// <auto-generated />
using System;
using LiturgyGeek.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LiturgyGeek.Data.Migrations
{
    [DbContext(typeof(LiturgyGeekContext))]
    [Migration("20230120040120_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LiturgyGeek.Data.Calendar", b =>
                {
                    b.Property<string>("CalendarId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("CalendarId");

                    b.ToTable("Calendars");
                });

            modelBuilder.Entity("LiturgyGeek.Data.CalendarItem", b =>
                {
                    b.Property<string>("CalendarId")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("CustomFlags")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OccasionId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("TransferredFrom")
                        .HasColumnType("date");

                    b.HasKey("CalendarId", "Date", "DisplayOrder");

                    b.HasIndex("OccasionId");

                    b.ToTable("CalendarItems");
                });

            modelBuilder.Entity("LiturgyGeek.Data.Occasion", b =>
                {
                    b.Property<string>("OccasionId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("DefaultName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OccasionId");

                    b.ToTable("Occasions");
                });

            modelBuilder.Entity("LiturgyGeek.Data.CalendarItem", b =>
                {
                    b.HasOne("LiturgyGeek.Data.Calendar", "Calendar")
                        .WithMany("CalendarItems")
                        .HasForeignKey("CalendarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LiturgyGeek.Data.Occasion", "Occasion")
                        .WithMany("CalendarItems")
                        .HasForeignKey("OccasionId");

                    b.Navigation("Calendar");

                    b.Navigation("Occasion");
                });

            modelBuilder.Entity("LiturgyGeek.Data.Calendar", b =>
                {
                    b.Navigation("CalendarItems");
                });

            modelBuilder.Entity("LiturgyGeek.Data.Occasion", b =>
                {
                    b.Navigation("CalendarItems");
                });
#pragma warning restore 612, 618
        }
    }
}
